{$CLEO .cs} 


const
    SCRIPT_NAME  =   "4memory_new"
    scritpPath  =   "CLEO\errorLog.ini"    
end


var
10@:  float
end

0000: 


if
    0@ == 1
then
    goto @initcializatciia 
else
    goto @panik_unload    
end



:initcializatciia
if
    0AA2: 0@ = load_library "cleo\NetworkCoreDll.dll" // IF and SET
then
    if 
        0AA4: 1@ = get_proc_address "CLEO_public_get_prms_using_ptr" library 0@       
    then
        if 
           0AA4: 2@ = get_proc_address "CLEO_public_call_func" library 0@     
        then
            if 
                0AA4: 3@ = get_proc_address "CLEO_read_stack" library 0@     
            then
                if 
                0AA4: 5@ = get_proc_address "PUBLIC_send_non_kick_space" library 0@     
                then
                    //-                
                    if 
                        0AA4: 4@ = get_proc_address "CLEO_public_connect_to_serv" library 0@     
                    then
                        0AA5: call 4@ num_params 0 pop 0
                        goto @main                
                    else
                        0AA3: free_library 0@
                    goto @panik_unload
                    end
                    //-------------------------------------
                else
                    0AA3: free_library 0@
                goto @panik_unload
                end
            else
                0AA3: free_library 0@
                goto @panik_unload
            end
        else
            0AA3: free_library 0@
            goto @panik_unload
        end 
    else
        0AA3: free_library 0@
        goto @panik_unload
    end
else
    goto @panik_unload
end 




 
:main
while true
    wait 111
    if 
       Player.Defined($PLAYER_CHAR)
    then
        gosub @Send_Sace // DataArival
        gosub @if_key_unload
        gosub @if_key_slap
        gosub @get_number_funcs_DLL_for_Call
        wait 200 
    end
end // end while

:Send_Sace
    0AA5: call 5@ num_params 1 pop 1 _wait 100
    wait 100
return

:if_key_unload
if
  0AB0:   key_pressed 46  del
then
    wait 2000
    if
        0AB0:   key_pressed 46  //del
    then
        0AA3: free_library 0@
        0A93: end_custom_thread
        
    end
end
return 
//---------------


:if_key_slap
if
    0AB0:   key_pressed 52 // 4
then 
    04C4: store_coords_to 20@ 21@ 22@ from_actor $PLAYER_ACTOR with_offset 0.0 0.0 0.0    
    0AA5: call 1@ num_params 3 pop 3 _z 22@v _y 21@v _z 20@v  //CLEO_public_get_prms_using_ptr(float *x, float *y, float *z) 
    0AF3: 20@ to_ini_file "CLEO\recv.ini" section "pos" key "f1"
    0AF3: 21@ to_ini_file "CLEO\recv.ini" section "pos" key "f2"
    0AF3: 22@ to_ini_file "CLEO\recv.ini" section "pos" key "f3"
    actor.PutAt($PLAYER_ACTOR,20@, 21@, 22@ )     
end                             
return



:get_number_funcs_DLL_for_Call


10@ = 13      
0AA5: call_function 2@ num_params 1 pop 1 _number 10@v     // 2@ =  "CLEO_public_call_func" 

0AF3: 10@ to_ini_file "CLEO\recv.ini" section "idintificator" key "val_float"
0AF1: 10@ to_ini_file "CLEO\recv.ini" section "idintificator" key "val_int"                    
WAIT 10 
        if
            10@ == 66.0
                then
                    0AA5: call_function 3@ num_params 4 pop 4 _number 10@v 11@V 12@V 13@V
                    0A92:create_custom_thread "5create_explosion.cs" 1 10@ 11@ 12@ 13@     
                    018C: play_sound 1052 at 0.0 0.0 0.0                    
                        end    
return 
//    if 
//        10@ == 66
//    then

        //0AA5: call_function 3@ num_params 4 pop 4  10@v 11@v 12@v 13@v        // CLEO_read_stack = 3@
//        actor.PutAt($PLAYER_ACTOR,11@, 12@, 13@ )          
//        0A92:create_custom_thread "5create_explosion.cs" 1 10@  11@  12@  13@ 

//    end             

     
:panik_unload
0A93: end_custom_thread

   
  


 
 
//:if_key_2
//if
//  0AB0:   key_pressed 50 // 2
//then
//    
//    5@ = 22
//    
//    0AB1: call_scm_func @CREATE_ARRAY prms 1 push size 5@ handle_to 0@  // 5@-size, 0@ = ptrArr
//    
//    04C4: store_coords_to 20@ 21@ 22@ from_actor $PLAYER_ACTOR with_offset 0.0 0.0 0.0
//
//
//     create actor
//    for 2@ = 0 to 5@ step 1 
//      0376: 1@ = create_random_actor_at 20@ 21@ 22@
//      0AB1: call_scm_func @SET_PED_TO_ARRAY 3 array 0@ index 2@ set_actor 1@ 
//      20@ += 1.0
//      21@ +=1.0
//      wait 0 
//    end 
//    
//    { !!! ÍÀØ ÍÎÂÛÉ ÊÎÄ !!! } 
//     atack
//model.Load(#silenced)                
//038B: load_requested_models
//           
//    for 2@ = 0 to 5@ step 1 
//      0AB1: call_scm_func @GET_PED_TO_ARRAY 2 array 0@ index 2@ get_actor 1@ 
//      if  
//      056D: actor 1@ defined 
//      then 
//          01B2: give_actor 1@ weapon 23 ammo 2000 //- äà¸ò àêò¸ğó îğóæåå, ñíà÷àëî çàãğóçèòå ìîäåëü.
//          05E2: actor 1@ kill_actor $PLAYER_ACTOR           
//      end 
//      wait 0 
//    end  
//    wait 20000
//    
//     del ped
//    for 2@ = 0 to 5@ step 1 
//      0AB1: call_scm_func @GET_PED_TO_ARRAY 2 array 0@ index 2@ get_actor 1@ 
//      if  
//      056D: actor 1@ defined 
//      then 
//      01C2: remove_references_to_actor 1@  
//      009B: destroy_actor 1@ 
//      end 
//      wait 0 
//    end  
//    
//    0AB1: call_scm_func @DESTROY_ARRAY prms 1 push 0@
//    wait 100
//    0AB1: call_scm_func @slap_player prms 0 
//    
     
//    0AF1: write_int 4@ to_ini_file scritpPath section SCRIPT_NAME key "GetSQR"
//    0AB1: call_scm_func @CREATE_ARRAY 1 size 100 handle_to 0@ 
//    04C4: store_coords_to 20@ 21@ 22@ from_actor $PLAYER_ACTOR with_offset 0.0 0.0 0.0
//    actor.PutAt($PLAYER_ACTOR,20@,21@,22@)
//    wait 3000
//    0AB1: call_scm_func @DESTROY_ARRAY 1 0@ 
//0A93: end_custom_thread
//end
//return 





//:create_explotion
//    0AB1: call_scm_func @slap_player prms 0 
//return
//
//--------------------------------------------------------------------------------------------------
// 
//:CREATE_ARRAY   // scm
//0A90: 2@ = 4 * 0@ // 4 * size 
//0AC8: 1@ = allocate_memory_size 2@ 
//0AB2: ret 1 1@ 
//
//
//
//:DESTROY_ARRAY // scm
//0AC9: free_allocated_memory 0@ 
//0AB2: ret 0 
//
//
//:GET_PED_TO_ARRAY // scm
//0A90: 3@ = 4 * 1@ // 4 * size 
//0A8E: 4@ = 0@ + 3@ // Buffer + offset 
//0A8D: 2@ = read_memory 4@ size 4 virtual_protect 0 
//0AB2: ret 1 2@ 
//
//
//:SET_PED_TO_ARRAY 
//0A90: 3@ = 4 * 1@ // 4 * size 
//0A8E: 4@ = 0@ + 3@ // Buffer + offset 
//0A8C: write_memory 4@ size 4 value 2@ virtual_protect 0 
//0AB2: ret 0 



//:slap_player    // scm
//04C4: store_coords_to 20@ 21@ 22@ from_actor $PLAYER_ACTOR with_offset 0.0 -1.0 -0.9
//actor.PutAt($PLAYER_ACTOR,20@,21@,22@)
//wait 333
//0AB2: ret 0


//-------------------------------------
//:konkatenatciia
//var   
//0@ : integer
//2@ : integer
//1@ : integer
//end   
//    2@ = 1@
//    0091: 2@ = integer 1@ to_float
//
//while  1@ > 0
//    1@ /=  10
//    2@ *= 0.1
//end
//0091: 0@ = integer 0@ to_float
//005B: 0@ += 2@
//0AB2: ret 1 0@
//---------------------------------------------------------------------------------






 